
plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig  "sleep_tight-common.mixins.json"
        mixinConfig  "sleep_tight.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}


processResources {
    inputs.property "version", project.version
    inputs.property "mod_name", project.getArchivesBaseName()

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version,
                "mod_name": project.getArchivesBaseName()
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name
            from components.java
        }
    }

    repositories {
        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories{
    flatDir {
        dirs "mods"
    }
    mavenCentral()
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    implementation 'org.jetbrains:annotations:22.0.0'

    modImplementation("net.mehvahdjukaar:moonlight-forge:${project.moonlight_version}")
    //modCompileOnly("net.mehvahdjukaar:heartstone-forge:1.19.2-1.1.2")
    //modImplementation ("curse.maven:selene-499980:4806893")
    modCompileOnly ("curse.maven:jei-238222:3884337")
    modCompileOnly ("curse.maven:configured-457570:4011355")
    modCompileOnly ("curse.maven:supplementaries-412082:4375776")

    modCompileOnly("curse.maven:autoreglib-250363:3857246")
    modCompileOnly("curse.maven:quark-243121:4426258")
}
